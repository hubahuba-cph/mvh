image: Ubuntu2004

platform: x64

configuration: Release

environment:
  configuration: Release


init:
    - export git_tag=$(git describe --tags --abbrev 0)
  
    - ps: >- 
        if([string]::IsNullOrEmpty($env:git_tag)) { $env:git_tag = '0.0.0' } 
  
        $normalizedBuildVersion = "$env:git_tag (Build: $env:APPVEYOR_BUILD_NUMBER)"

        $env:GIT_TAG_NAME = "v${env:git_tag}-$env:APPVEYOR_BUILD_NUMBER"

        $env:docker_tag = $normalizedBuildVersion.Replace(' ', '').Replace('(', '-').Replace(':','-').Trim(')')
  
        Write-Output "Version using git tag determined as: $normalizedBuildVersion"
        
        Update-AppVeyorBuild -version $normalizedBuildVersion

dotnet_csproj:
    patch: true
    file: '**\*.csproj'
    version: '{APPVEYOR_BUILD_VERSION}'
    package_version: '{APPVEYOR_BUILD_VERSION}'
    assembly_version: '{APPVEYOR_BUILD_VERSION}'
    file_version: '{APPVEYOR_BUILD_VERSION}'
    informational_version: '{APPVEYOR_BUILD_VERSION}'
          
build_script:
  - ps: dotnet publish src/Console/Console.csproj --configuration Release -p:PublishSingleFile=true --self-contained true --output artifacts --runtime win-x64
  
after_build:
  - ps: cd artifacts
  - ps: 7z a cli-parser.zip *.exe

artifacts:
  - path: 'artifacts/*.zip'
    name: cli-parser
    type: zip

deploy:
  provider: GitHub
  auth_token: 
    secure: 1HHWwzsrPc8vT07igNUYjJ3KLQdXf4Qsk8z4fdBN2CtajjwumweTXNGilZ77q8iM
  release: cli-parser, $(APPVEYOR_BUILD_VERSION)
  description: 'Release: cli-parser'
  artifact: cli-parser
  draft: false
  prerelease: false
  tag: $(GIT_TAG_NAME)
  on: 
    APPVEYOR_REPO_TAG: false
    configuration: Release
    branch: master
  